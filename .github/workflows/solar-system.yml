name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: cache npm dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      runs-on: ubuntu-latest
      steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: Setup NodeJS Version
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: cache npm dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}
      - name: Install Dependencies
        run: npm install
      - name: run code coverage
        continue-on-error: true
        run: npm run coverage
      - name: Archive Test Result
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5

    docker:
        name: containerization
        needs: [unit-testing, code-coverage]
        runs-on: ubuntu-latest
        steps:
        - name: checkout repo
          uses: actions/checkout@v4

        # - name: Dockerhub login
        #   uses: docker/login-action@v2.2.0
        #   with:
        #     username: ${{vars.DOCKERHUB_USERNAME}}
        #     password: ${{secrets.DOCKERHUB_PASSWORD}}

        - name: GHCR login
          uses: docker/login-action@v2.2.0
          with:
            registry: ghcr.io
            username: ${{github.refepository_owner}}
            password: ${{secrets.GITHUB_TOKEN}}

        - name: Docker build for testing
          uses: docker/build-push-action@v4
          with:
            context: .
            push: false
            tags: ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}

        - name: Docker Image test
          run: |
            docker images
            docker run --name solar-system-app -d \
                -p 3000:3000 \
                -e MONGO_URI=$MANGO_URI \
                -e MONGO_USERNAME=$MONGO_USERNAME \
                -e MONGO_PASSWORD=$MONGO_PASSWORD \
                ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}

            echo Testing Image URL using wget
            wget -q -O - 127.0.0.1:3000/live | grep live 

        - name: Container registry Push
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: |
                ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}
                ghcr.io/${{github.refepository_owner}}/solar-system:${{github.sha}}
