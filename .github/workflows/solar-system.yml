name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: cache npm dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      needs: unit-testing
      steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: Setup NodeJS Version
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: cache npm dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}
      - name: Install Dependencies
        run: npm install
      - name: run code coverage
        continue-on-error: true
        run: npm run code-coverage
      - name: Archive Test Result
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5

    docker:
        name: containerization
        needs: code-coverage
        runs-on: ubuntu-latest
        steps:
        - name: checkout repo
          uses: actions/checkout@v4

        - name: Dockerhub login
          uses: docker/login-action@v2.2.0
          with:
            username: ${{vars.DOCKERHUB_USERNAME}}
            password: ${{secrets.DOCKERHUB_PASSWORD}}