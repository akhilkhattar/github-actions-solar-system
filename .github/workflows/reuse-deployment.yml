name: Deployment - Reusable Workflow
'on':
  workflow_call:
    inputs:
      mongodb-uri:
        required: true
        type: string
      mongodb-username:
        required: true
        type: string
      k8s-manifest-dir:
        description: Directory containing kubernetes manifests files
        default: kubernetes/
        required: true
        type: string
      environment:
        description: Provide the deployment environment
        default: dev
        required: true
        type: string
    outputs:
      application-url:
        value: ${{jobs.reuse-deploy.outputs.APP_INGRESS_URL}}
      
    secrets:
      k8s-kubeconfig:
        required: false
      mongodb-password:
        required: true
jobs:
  reuse-deloy:
    environment:
      name: ${{inputs.environment}}
      url: 'http://${{steps.set-ingress-host-address.outputs.APP_INGRESS_HOST}}'
    outputs:
      APP_INGRESS_URL: '${{steps.set-ingress-host-address.outputs.APP_INGRESS_HOST}}'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name demo-eks --region us-east-1

      - name: Save Nginx Ingress Controller IP as a GITHUB Environment Variable
        run: |
          echo INGRESS_IP=$(kubectl get svc nginx-ingress-ingress-nginx-controller -n ingress-nginx -o jsonpath='{.status.loadBalancer.ingress[0].hostname}') >> $GITHUB_ENV
      - name: Replace Token in manifest files
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '_{_'
          tokenSuffix: '_}_'
          files: '["${{inputs.k8s-manifest-dir}}*.yaml"]'
        env:
          NAMESPACE: '${{vars.NAMESPACE}}'
          REPLICAS: '${{vars.REPLICAS}}'
          IMAGE: akhil-staging/solar-system:${{github.sha }}
          INGRESS_IP: '${{env.INGRESS_IP}}'
      - name: check files
        run: |
          cat ${{inputs.k8s-manifest-dir}}*.yaml
      - run: 'kubectl create namespace ${{vars.NAMESPACE}}'
        continue-on-error: true
      - name: create MangoDB secret
        run: |
          kubectl -n ${{vars.NAMESPACE}} create secret generic mongo-db-creds \
          --from-literal=MONGO_URI=${{inputs.mongodb-uri}} \
          --from-literal=MONGO_USERNAME=${{inputs.mongodb-username}} \
          --from-literal=MONGO_PASSWORD=${{secrets.mongodb-password}} \
          --dry-run=client \
          -o yaml | kubectl apply -f - --validate=false
      - name: Deploy to Dev Env in EKS
        run: |
          kubectl apply -f ${{inputs.k8s-manifest-dir}}
      - name: Set App Ingress Host URL
        id: set-ingress-host-address
        run: >
          echo "APP_INGRESS_HOST=$(kubectl get ing -n ${{vars.NAMESPACE}} -o jsonpath='{.items[0].spec.rules[0].host}')" >> "$GITHUB_OUTPUT"
