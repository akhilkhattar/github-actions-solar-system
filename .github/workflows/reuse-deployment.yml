name: Deployment - Reusable Workflow
'on':
  workflow_call: null
jobs:
  reuse-deloy:
    environment:
      name: development
      url: 'http://${{steps.set-ingress-host-address.outputs.APP_INGRESS_HOST}}'
    outputs:
      APP_INGRESS_URL: '${{steps.set-ingress-host-address.outputs.APP_INGRESS_HOST}}'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name demo-eks --region us-east-1
      - name: Save Nginx Ingress Controller IP as a GITHUB Environment Variable
        run: |
          echo INGRESS_IP=$(kubectl get svc nginx-ingress-ingress-nginx-controller -n ingress-nginx -o jsonpath='{.status.loadBalancer.ingress[0].hostname}') >> $GITHUB_ENV
      - name: Replace Token in manifest files
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '_{_'
          tokenSuffix: '_}_'
          files: '["kubernetes/development/*.yaml"]'
        env:
          NAMESPACE: '${{vars.NAMESPACE}}'
          REPLICAS: '${{vars.REPLICAS}}'
          IMAGE: >-
            211125465619.dkr.ecr.us-east-1.amazonaws.com/akhil-staging/solar-system:${{github.sha }}
          INGRESS_IP: '${{env.INGRESS_IP}}'
      - name: check files
        run: |
          cat kubernetes/development/*.yaml
      - run: 'kubectl create namespace ${{vars.NAMESPACE}}'
        continue-on-error: true
      - name: create MangoDB secret
        run: |
          kubectl -n ${{vars.NAMESPACE}} create secret generic mongo-db-creds \
          --from-literal=MONGO_URI=${{env.MONGO_URI}} \
          --from-literal=MONGO_USERNAME=${{env.MONGO_USERNAME}} \
          --from-literal=MONGO_PASSWORD=${{secrets.MONGO_PASSWORD}} \
          --dry-run=client \
          -o yaml | kubectl apply -f - --validate=false
      - name: Deploy to Dev Env in EKS
        run: |
          kubectl apply -f kubernetes/development
      - name: Set App Ingress Host URL
        id: set-ingress-host-address
        run: >
          echo "APP_INGRESS_HOST=$(kubectl get ing -n ${{vars.NAMESPACE}} -o jsonpath='{.items[0].spec.rules[0].host}')" >> "$GITHUB_OUTPUT"
